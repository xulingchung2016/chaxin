package com.newbrain.adapter;

import java.util.List;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.newbrain.adapter.MyBaseAdapter_TeaMallGoodsList.MyOnClickListen;
import com.newbrain.adapter.MyBaseAdapter_TeaMallGoodsList.ViewHolder;
import com.newbrain.chaxin.R;
import com.newbrain.chaxin.my.set.ModifyAddressActivity;
import com.newbrain.chaxin.teamall.DetailActivity;
import com.newbrain.jsonthread.Constant;
import com.newbrain.model.GetAddressListBean.GetAddressList;
import com.newbrain.user.User;
import com.newbrain.utils.SharedPreferencesHelp;
import com.newbrain.xutils.Xutils_BitmapUtils;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

public  class MyBaseAdapter_AddressList  extends BaseAdapter
{
	private Context context;
	private LayoutInflater inflater;
	public List<GetAddressList> list;
	public String requestaddressfrom = "";
	public Handler handle;
	
	public String get_requestaddressfrom()
	{
		return this.requestaddressfrom;
	}
	
	public void set_requestaddressfrom(String from)
	{
		this.requestaddressfrom = from;
	}
	
	public MyBaseAdapter_AddressList(Context context, List<GetAddressList> list, Handler handle)
	{
		this.context = context;
		this.list = list;
		
		inflater = LayoutInflater.from(this.context);
		this.handle = handle;
	}
	
	public List<GetAddressList> getList()
	{
		return list;
	}

	public void setList(List<GetAddressList> list)
	{
		this.list = list;
		
		notifyDataSetChanged();
	}
	
	@Override
	public int getCount()
	{
		// TODO Auto-generated method stub
		return list.size();
	}

	@Override
	public Object getItem(int position) 
	{
		// TODO Auto-generated method stub
		return list.get(position);
	}

	@Override
	public long getItemId(int position) 
	{
		// TODO Auto-generated method stub
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) 
	{
		// TODO Auto-generated method stub
		ViewHolder viewHolder;
		
		if(convertView == null)
		{
			convertView = inflater.inflate(R.layout.addresslist_layout, null);
			viewHolder = new ViewHolder();
			ViewUtils.inject(viewHolder, convertView);
			convertView.setTag(viewHolder);			
		}
		else
		{		
			viewHolder = (ViewHolder) convertView.getTag();
		}
		
		MyOnClickListen myOnClickListen = new MyOnClickListen(position, handle);
		myOnClickListen.set_requestaddressfrom(requestaddressfrom);
		convertView.setOnClickListener(myOnClickListen);
		
		viewHolder.person_name.setText(list.get(position).getLinkMan());
		viewHolder.person_phone.setText(list.get(position).getPhoneNo());
		viewHolder.receive_address.setText(list.get(position).getAddress());
		if(list.get(position).getIsDefault())
		{
			viewHolder.default_text.setVisibility(View.VISIBLE);
		}
		else
		{
			viewHolder.default_text.setVisibility(View.GONE);
		}
		
		return convertView;
	}
	
	public class MyOnClickListen implements OnClickListener
	{
		private int position;
		public Handler handle;
		
		public String requestaddressfrom = "";
		
		public String get_requestaddressfrom()
		{
			return this.requestaddressfrom;
		}
		
		public void set_requestaddressfrom(String from)
		{
			this.requestaddressfrom = from;
		}
		
		public MyOnClickListen()
		{
			super();
			// TODO Auto-generated constructor stub
		}

		public MyOnClickListen(int position, Handler handle)
		{
			super();
			this.position = position;
			this.handle = handle;
		}

		@Override
		public void onClick(View v)
		{
			Log.e("lijinjin", "My onClick");
			Bundle bundle = new Bundle();
			bundle.putString("id", list.get(position).getId());
			bundle.putString("linkMan", list.get(position).getLinkMan());
			bundle.putString("phoneNo", list.get(position).getPhoneNo());
			bundle.putString("userId", list.get(position).getUserId());
			bundle.putString("area", list.get(position).getArea());
			bundle.putString("address", list.get(position).getAddress());
			bundle.putString("zipCode", list.get(position).getZipCode());
			if(list.get(position).getIsDefault())
			{
				bundle.putString("isDefault", "true");
			}
			else
			{
				bundle.putString("isDefault", "false");
			}
			
			if((requestaddressfrom != null) && requestaddressfrom.equals("order"))
			{
				Message msg = new Message();
				msg.what = 1122;
				
				String NameTemp = "收件人： " + list.get(position).getLinkMan() + "    " + list.get(position).getPhoneNo();
				String address = list.get(position).getAddress();
				
				User.getInstance().setreceive_Namephone(NameTemp);
				User.getInstance().setreceive_DetailAddress(address);
				SharedPreferencesHelp.SavaString(context, "name", NameTemp);
				SharedPreferencesHelp.SavaString(context, "address", address);
				SharedPreferencesHelp.SavaString(context, "expressId", list.get(position).getId());

				handle.sendMessage(msg);
			}
			else
			{
				context.startActivity( new Intent(context, ModifyAddressActivity.class).putExtras(bundle));
			}
		}	
	}
	
	public class ViewHolder
	{		
		@ViewInject(R.id.textview_name)
		private TextView person_name;
		
		@ViewInject(R.id.textview_phone)
		private TextView person_phone;
		
		@ViewInject(R.id.textview_default_text)
		private TextView default_text;
		
		@ViewInject(R.id.textview_receive_address)
		private TextView receive_address;
	}
}
